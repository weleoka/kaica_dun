/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.4.0.Final'

    // https://mvnrepository.com/artifact/org.hibernate/hibernate-gradle-plugin
    // Kai: not sure what this does so disabling for now.
    //compile group: 'org.hibernate', name: 'hibernate-gradle-plugin', version: '5.4.0.Final'

    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'

    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'


    // This dependency is found on compile classpath of this component and consumers.
    // Kai: Disabled now as don't need the Google things here.
    // implementation 'com.google.guava:guava:26.0-jre'


    // Use JUnit test framework
    // Kai: disabled here as testing is not implemented now.
    // testImplementation 'junit:junit:4.12'

    // https://mvnrepository.com/artifact/junit/junit
    // Disabled here as testing is not implemented now.
    // testCompile group: 'junit', name: 'junit', version: '4.12'

}

// Kai: Added task to allow copying dependency files to the project directory for development.
// Running this task will copy dependencies into lib folder which is where IJ idea loads local jar files from.
// from configurations.compile can be changed to from configurations.runtime which will copy both compile and runtime
// dependencies to a local folder.
task cpDeps(type: Copy) {
    from configurations.compile
    into 'lib'
}

// Define the main class for the application
mainClassName = 'kaica_dun.App'
